- name: Discover and group devices automatically
  hosts: fortimanager
  collections:
    - fortinet.fortimanager
  connection: httpapi
  vars:
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
    ansible_network_os: fortinet.fortimanager.fortimanager
    ansible_user: "admin"
    ansible_password: "admin"
    ansible_host: "192.168.10.6"

  tasks:
    - name: Get list of all devices
      fortinet.fortimanager.fmgr_fact:
        facts:
          selector: "dvmdb_device"
          params:
            adom: "root"
            fields: ["name", "hostname", "ip", "vdom"]
      register: device_facts

    - name: Add devices to groups based on hostname
      vars:
        device_group: >-
          {% set h = item.hostname | default('') | lower | trim %}
          {% if h.startswith('Hub') %}HUBs
          {% else %}spokes{% endif %}spokes
      fortinet.fortimanager.fmgr_dvmdb_group_objectmember:
        adom: "root"
        group: "{{ device_group }}"
        state: "present"
        dvmdb_group_objectmember:
          name: "{{ item.name }}"
          vdom: "{{ (item.vdom[0].name | default('root')) if item.vdom is defined else 'root' }}"
      loop: "{{ device_facts.meta.response_data }}"
      when:
        - item.name is defined
        - item.hostname is defined
        - item.hostname.startswith('Hub') or item.hostname.startswith('spoke')
      loop_control:
        label: "{{ item.name }}"


