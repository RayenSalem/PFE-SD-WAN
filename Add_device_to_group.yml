- name: Discover and group devices automatically
  hosts: fortimanager
  collections:
    - fortinet.fortimanager
  connection: httpapi
  vars:
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
    ansible_network_os: fortinet.fortimanager.fortimanager
    ansible_user: "admin"
    ansible_password: "admin"
    ansible_host: "192.168.10.6"
  tasks:
    # First discover all devices in FortiManager
    - name: Get list of all devices
      fortinet.fortimanager.fmgr_fact:
        facts:
          selector: "dvmdb_device"
          params:
            adom: "root"
      register: device_facts

    # Create groups if they don't exist
    - name: Ensure HUBs group exists
      fortinet.fortimanager.fmgr_dvmdb_group:
        adom: "root"
        state: "present"
        dvmdb_group:
          name: "HUBs"
          desc: "Group for all hub devices"

    - name: Ensure SPOKEs group exists
      fortinet.fortimanager.fmgr_dvmdb_group:
        adom: "root"
        state: "present"
        dvmdb_group:
          name: "spokes"
          desc: "Group for all spoke devices"

    # Add devices to appropriate groups based on hostname
    - name: Process discovered devices
      fortinet.fortimanager.fmgr_dvmdb_group_objectmember:
        adom: "root"
        group: "{{ 'HUBs' if item.name | regex_search('^hub', ignorecase=True) else 'spokes' }}"
        state: "present"
        dvmdb_group_objectmember:
          name: "{{ item.name }}"
          vdom: "{{ item.vdom | default('root') }}"
      loop: "{{ device_facts.meta.response_data }}"
      when: 
        - device_facts.meta.response_data is defined
        - item.name is defined
      loop_control:
        label: "{{ item.name }}"