- name: Commit config to multiple devices
  hosts: fortimanager
  gather_facts: false
  connection: httpapi
  vars:
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
    ansible_httpapi_port: 443
    ansible_command_timeout: 120
    ansible_warnings: false
    device_adom: "root"
    device_vdom: "root"
    devices:
      - name: "Hub"
        vdom: "root"
      - name: "spoke1"
        vdom: "root"
      - name: "spoke2"
        vdom: "root"

  tasks:
    - name: Get device object IDs
      fortinet.fortimanager.fmgr_fact:
        facts:
          selector: "dvmdb_device"
          params:
            adom: "{{ device_adom }}"
      register: device_facts

    - name: Debug to verify device facts (optional)
      debug:
        var: device_facts.meta.response_data

    - name: Filter devices that exist in FortiManager
      set_fact:
        valid_devices: >-
          {{
            device_facts.meta.response_data
            | selectattr('name', 'in', devices | map(attribute='name') | list)
            | map(attribute='name')
            | list
          }}

    - name: Filter scope list with name and vdom
      set_fact:
        scope_devices: >-
          {{
            devices
            | selectattr('name', 'in', valid_devices)
            | list
          }}

    - name: Commit configuration to devices
      fortinet.fortimanager.fmgr_securityconsole_install_device:
        securityconsole_install_device:
          adom: "{{ device_adom }}"
          scope: "{{ scope_devices }}"
      register: installing_task

    - name: Wait for task to complete
      fortinet.fortimanager.fmgr_fact:
        facts:
          selector: "task_task"
          params:
            task: "{{ installing_task.meta.response_data.task }}"
      register: taskinfo
      until: taskinfo.meta.response_data.percent == 100
      retries: 30
      delay: 3

    - name: Show task result
      debug:
        var: taskinfo.meta.response_data